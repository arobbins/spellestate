(function() {  "use strict";

  /**
   * WooCommerce CSV Import Suite Admin scripts
   *
   * @since 2.9.0-1
   */
  jQuery(document).ready(function($) {
    $('body').on('click', 'input.js-wc-csv-import-suite-merge', function(e) {
      var checked, toggle;
      checked = $(this).is(':checked');
      toggle = checked ? 'show' : 'hide';
      return $('#wc-csv-import-suite-insert-non-matching').closest('tr')[toggle]();
    });
    $('body').on('change', 'select.js-wc-csv-import-suite-delimiter', function(e) {
      var data, delimiter;
      delimiter = $(this).val();
      $('.wc-csv-import-suite-preview-container').block({
        message: null,
        overlayCSS: {
          opacity: 0.3
        }
      });
      data = {
        action: 'wc_csv_import_suite_get_preview',
        security: wc_csv_import_suite.preview_nonce,
        delimiter: delimiter,
        file: $('.js-wc-csv-import-suite-file').val()
      };
      return $.get(ajaxurl, data, function(response) {
        $('#wc-csv-import-suite-preview').html(response);
        return $('.wc-csv-import-suite-preview-container').unblock();
      });
    });
    return wc_csv_import_suite.display_import_progress = function() {
      var check, counts, data, details_shown, details_toggler_shown, drawGraph, last_result, processed_items, progress, running, total, ui;
      progress = 0;
      last_result = 0;
      total = wc_csv_import_suite.bytes;
      running = false;
      counts = {
        inserted: 0,
        merged: 0,
        skipped: 0,
        failed: 0
      };
      processed_items = 0;
      details_shown = false;
      details_toggler_shown = false;
      data = {
        action: 'wc_csv_import_suite_get_progress',
        security: wc_csv_import_suite.progress_nonce,
        job_id: wc_csv_import_suite.job_id
      };
      ui = {
        bar: $('#wc-csv-import-suite-progress .bar'),
        count: $('#wc-csv-import-suite-progress .processed-count'),
        percentage: $('#wc-csv-import-suite-progress .percentage'),
        results: $('#wc-csv-import-suite-results')
      };
      drawGraph = function(highlight) {
        var highlight_series, series;
        series = [];
        $.each(counts, function(status, count) {
          return series.push({
            label: wc_csv_import_suite.legends[status].title,
            data: count,
            color: wc_csv_import_suite.legends[status].color
          });
        });
        if (highlight !== 'undefined' && series[highlight]) {
          highlight_series = series[highlight];
          highlight_series.color = '#9c5d90';
        }
        $.plot($('.chart-placeholder.import-results'), series, {
          grid: {
            hoverable: true
          },
          series: {
            pie: {
              show: true,
              radius: 1,
              innerRadius: 0.6,
              label: {
                show: false
              }
            },
            enable_tooltip: true,
            append_tooltip: wc_csv_import_suite.i18n.chart_tooltip.replace('%s', '')
          },
          legend: {
            show: false
          }
        });
        return $('.chart-placeholder.import-results').resize();
      };
      drawGraph();
      check = setInterval(function() {
        if (running) {
          return;
        }
        running = true;
        data.results_from = last_result + 1;
        return $.get(ajaxurl, data, function(response) {
          var css_class, message, percentage, some_skipped_or_failed;
          if ('string' === typeof response) {
            response = JSON.parse(response);
          }
          progress = response.progress;
          percentage = Math.round(progress / total * 100);
          if (response.results) {
            last_result = Number(Object.keys(response.results).pop());
            $.each(response.results, function(line, result) {
              var message, status;
              if (ui.results.find('tr.line-' + line).length) {
                return;
              }
              status = $('<span />').text(result.status).text();
              message = $('<span />').text(result.message).text();
              counts[status]++;
              processed_items++;
              ui.results.find('li.' + status + ' .amount').text(counts[status]);
              if (status === 'skipped' || status === 'failed') {
                ui.results.find('.results-details > tbody').append('<tr class="line-' + line + ' ' + status + '"><td>' + line + '</td><td>' + wc_csv_import_suite.legends[status].label + '</td><td>' + message + '</td></tr>');
                if (!details_toggler_shown) {
                  ui.results.find('.js-details-link-widget').show();
                  return details_toggler_shown = true;
                }
              }
            });
          }
          ui.count.text(processed_items);
          ui.percentage.text(percentage + ' %');
          ui.bar.css('width', percentage + '%');
          drawGraph();
          running = false;
          if (progress >= total) {
            clearInterval(check);
            progress = total;
            some_skipped_or_failed = counts.failed || counts.skipped;
            css_class = some_skipped_or_failed ? 'notice-warning' : 'notice-success';
            message = some_skipped_or_failed ? wc_csv_import_suite.i18n.import_success_with_exceptions : wc_csv_import_suite.i18n.import_success;
            $('h2:first').after('<div class="notice ' + css_class + '"><p>' + message + '</p></div>');
            if (wc_csv_import_suite.dry_run) {
              message = wc_csv_import_suite.i18n.dry_run_complete.replace('%1$s', '<a href="' + wc_csv_import_suite.run_live_url + '">').replace('%2$s', '</a>');
              return $('h2:first').after('<div class="notice notice-success"><p>' + message + '</p></div>');
            }
          }
        });
      }, 1000);
      $('.highlight_series').hover(function() {
        return drawGraph($(this).data('series'));
      }, function() {
        return drawGraph();
      });
      $(window).resize((function() {
        return function() {
          var timeoutId;
          clearTimeout(timeoutId);
          return timeoutId = setTimeout(function() {
            timeoutId = null;
            return drawGraph();
          }, 100);
        };
      })());
      return $('.js-toggle-details').click(function(e) {
        e.preventDefault();
        ui.results.find('.results-details').toggle();
        details_shown = ui.results.find('.results-details').is(':visible');
        return $(this).find('.js-toggle-details-text').text(details_shown ? wc_csv_import_suite.i18n.hide_details : wc_csv_import_suite.i18n.show_details);
      });
    };
  });

}).call(this);


